<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hexo安装记]]></title>
      <url>http://xuzhibin.com/2016/05/30/hexo-install/</url>
      <content type="html"><![CDATA[<h1 id="Hexo是啥"><a href="#Hexo是啥" class="headerlink" title="Hexo是啥"></a>Hexo是啥</h1><p><a href="https://hexo.io" target="_blank" rel="external">Hexo</a> 是由 Node.js 驱动的一款快速、简单且功能强大的博客框架。可以快速将 Markdown 格式的文档生成静态页面。是越来越笨重的 Wordpress 和麻烦的空间管理的替代方案。</p>
<h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><p>首先翻看一遍 <a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo 官方文档</a></p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>安装 Node.js &amp; Git<br>该命令执行后，自动装好node和npm。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<h2 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h2><p>按照Github提示，创建SSH秘钥：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~/.ssh <span class="comment">#创建ssh命令</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line"></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span> <span class="comment">#注意更改Email地址</span></span><br><span class="line"></span><br><span class="line">$ pbcopy &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>此时，pdcopy命令已经将id_rsa.pub内容复制到剪切板。</p>
<p>登录 github：<a href="https://github.com/settings/ssh" target="_blank" rel="external">https://github.com/settings/ssh</a> 点击Add an SSH Key，Title 部分填写一个所用电脑的名称，然后在Key部分填写之前通过pdcopy命令复制的内容。生成 key <a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">https://help.github.com/articles/generating-ssh-keys/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"yourusername</span><br><span class="line">$ git config --global user.email "</span>youremail<span class="string">"</span></span><br></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>如果是下面的反馈：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (207.97.227.239)'</span> can<span class="string">'t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure>
<p>不要紧张，输入yes就好，然后会看到：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi cnfeat! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>
<h2 id="安装-Hexo-1"><a href="#安装-Hexo-1" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>好了，这个时候如果报错，记得加 sudo</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="配置-Hexo"><a href="#配置-Hexo" class="headerlink" title="配置 Hexo"></a>配置 Hexo</h1><p>进入想要存放博客的文件夹，初始化设置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>初始化成功后，文件夹里会有这些东西：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml        <span class="comment">#配置文件</span></span><br><span class="line">├── package.json    <span class="comment">#应用程序数据</span></span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span>            <span class="comment">#网站内容</span></span><br><span class="line">|   ├── _drafts        <span class="comment">#草稿</span></span><br><span class="line">|   └── _posts        <span class="comment">#文章</span></span><br><span class="line">└── themes            <span class="comment">#主题</span></span><br></pre></td></tr></table></figure>
<p>配置文件的详细说明请查看官方文档。</p>
<h1 id="本地访问博客"><a href="#本地访问博客" class="headerlink" title="本地访问博客"></a>本地访问博客</h1><p>生成静态文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>启动本地服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>这时提示</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>然后在浏览器打开 <a href="http://0.0.0.0:4000/，就可以看到迁移好的博客啦！" target="_blank" rel="external">http://0.0.0.0:4000/，就可以看到迁移好的博客啦！</a></p>
<h1 id="挑选主题"><a href="#挑选主题" class="headerlink" title="挑选主题"></a>挑选主题</h1><p>可参考 有那些好看的 Hexo 主题？</p>
<p>下载主题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/xxxx themes/xxx</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>启用主题：克隆/下载 完成后，打开 站点配置文件 “_config.yml”，找到 theme 字段，并将其值更改为下载的主题名字。</p>
<p>剩下的就根据主题使用文档，按照自己的喜好修改了。</p>
<p>我选的 <a href="http://theme-next.iissnan.com" target="_blank" rel="external">NEXT主题</a> 胜在 <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">说明文档</a> 超详细的~</p>
<h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p><strong>站内搜索</strong><br>hexo-generator-search插件为 Hexo3 提供搜索功能。</p>
<p>安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>
<p><strong>Feed</strong><br>hexo-generator-feed 可以生成Atom 1.0 或 RSS 2.0 feed。</p>
<p>安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<p><strong>Sitemap</strong><br>说明</p>
<p>安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-seo-friendly-sitemap --save</span><br></pre></td></tr></table></figure>
<h1 id="配置-Github-并上传"><a href="#配置-Github-并上传" class="headerlink" title="配置 Github 并上传"></a>配置 Github 并上传</h1><p>新建跟用户名同名的 repository，以“.github.io” 为后缀</p>
<p>创建成功后，点击界面右侧的Settings，打开页面后找到GitHub Pages，点击Launch automatic page generator，生成 page。</p>
<p>然后在网站配置文件 _config.yml文件中，找到Deployment，修改配置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>如果使用 git 方式部署，执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>
<p>命令来安装插件。</p>
<p>安装成功后，在当前目录进行 deploy 操作</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>上传成功后，访问 yourname.github.io ，测试是否可以正常访问。</p>
<h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>在 Github 里生成 CNAME 文件<br>为了绑定域名，首先在 Hexo 的 “source” 文件夹中新建一个CNAME文件（没有后缀），文件内容为你要设置的域名。目的是将你的域名（如 uegeek.com ）指向 Github 服务器。</p>
<p>Deploy 到 Github上去后大概需要几分钟生效。</p>
<p>到 DNSPod 新建域名，并添加 CNAME 记录指向 kidult00.github.io 。</p>
<p>当打开 uegeek.com 看到改头换面的博客后，内心默默地原谅自己拖延了两年 T.T</p>
<h1 id="Hexo设置"><a href="#Hexo设置" class="headerlink" title="Hexo设置"></a>Hexo设置</h1><h2 id="站点设置"><a href="#站点设置" class="headerlink" title="站点设置"></a>站点设置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/tommy351/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site #整站的基本信息</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">1000</span> words a Day <span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> Writing <span class="number">1000</span> Words a Day Changes My Life <span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">description:</span> 学习总结 思考感悟 知识管理 <span class="comment">#网站描述</span></span><br><span class="line"><span class="attr">author:</span>  cnFeat <span class="comment">#网站作者，在下方显示</span></span><br><span class="line"><span class="attr">email:</span> cnFeat@gmail.com <span class="comment">#联系邮箱</span></span><br><span class="line"><span class="attr">language:</span> zh-CN</span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory</span></span><br><span class="line"><span class="attr">url:</span> http://www.cnfeat.com <span class="comment">#你的域名</span></span><br><span class="line"><span class="attr">root:</span> /</span><br><span class="line"><span class="attr">permalink:</span> :year/:month/:day/:title/</span><br><span class="line"><span class="attr">tag_dir:</span> tags</span><br><span class="line"><span class="attr">archive_dir:</span> archives</span><br><span class="line"><span class="attr">category_dir:</span> categories</span><br><span class="line"><span class="attr">code_dir:</span> downloads/code</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> source</span><br><span class="line"><span class="attr">public_dir:</span> public</span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> :title.md <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> post</span><br><span class="line"><span class="attr">auto_spacing:</span> <span class="literal">false</span> <span class="comment"># Add spaces between asian characters and western characters</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">max_open_file:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">multi_thread:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> uncategorized</span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Archives</span></span><br><span class="line"><span class="comment">## 2: Enable pagination</span></span><br><span class="line"><span class="comment">## 1: Disable pagination</span></span><br><span class="line"><span class="comment">## 0: Fully Disable</span></span><br><span class="line"><span class="attr">archive:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">category:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">tag:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Server</span></span><br><span class="line"><span class="comment">## Hexo uses Connect as a server</span></span><br><span class="line"><span class="comment">## You can customize the logger format as defined in</span></span><br><span class="line"><span class="comment">## http://www.senchalabs.org/connect/logger.html</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">4000</span></span><br><span class="line"><span class="attr">server_ip:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">logger:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">logger_format:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> YYYY-MM-DD</span><br><span class="line"><span class="attr">time_format:</span> H:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">15</span> <span class="comment">#每页15篇文章</span></span><br><span class="line"><span class="attr">pagination_dir:</span> page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disqus #社会化评论disqus，我使用多说，在主题中配置</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span></span><br><span class="line"><span class="comment">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span></span><br><span class="line"><span class="attr">theme:</span> jacman</span><br><span class="line"><span class="attr">exclude_generator:</span></span><br><span class="line"><span class="attr">Plugins:</span></span><br><span class="line"><span class="bullet">-</span> hexo-generator-feed</span><br><span class="line"><span class="bullet">-</span> hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line"><span class="comment">#sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line"><span class="attr">  path:</span> sitemap.xml</span><br><span class="line"></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">  type:</span> atom</span><br><span class="line"><span class="attr">  path:</span> atom.xml</span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Markdown</span></span><br><span class="line"><span class="comment">## https://github.com/chjj/marked</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line"><span class="attr">  gfm:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  pedantic:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  sanitize:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  tables:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  breaks:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  smartLists:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  smartypants:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Stylus</span></span><br><span class="line"><span class="attr">stylus:</span></span><br><span class="line"><span class="attr">  compress:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> github</span><br><span class="line"><span class="attr">  repository:</span> https://github.com/xuzhibin/xuzhibin.github.io.git</span><br><span class="line"><span class="attr">  branch:</span> master</span><br></pre></td></tr></table></figure>
<h2 id="模版设置"><a href="#模版设置" class="headerlink" title="模版设置"></a>模版设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── languages  <span class="comment">#多语言</span></span><br><span class="line">|   ├── default.yml<span class="comment">#默认语言</span></span><br><span class="line">|   └── zh-CN.yml  <span class="comment">#中文语言</span></span><br><span class="line">├── layout <span class="comment">#布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span></span><br><span class="line">|   ├── _partial   <span class="comment">#局部的布局，此目录下的*.ejs是对头尾等局部的控制</span></span><br><span class="line">|   └── _widget<span class="comment">#小挂件的布局，页面下方小挂件的控制</span></span><br><span class="line">├── <span class="built_in">source</span> <span class="comment">#源码</span></span><br><span class="line">|   ├── css<span class="comment">#css源码 </span></span><br><span class="line">|   |   ├── _base  <span class="comment">#*.styl基础css</span></span><br><span class="line">|   |   ├── _partial   <span class="comment">#*.styl局部css</span></span><br><span class="line">|   |   ├── fonts  <span class="comment">#字体</span></span><br><span class="line">|   |   ├── images <span class="comment">#图片</span></span><br><span class="line">|   |   └── style.styl <span class="comment">#*.styl引入需要的css源码</span></span><br><span class="line">|   ├── fancybox   <span class="comment">#fancybox效果源码</span></span><br><span class="line">|   └── js <span class="comment">#javascript源代码</span></span><br><span class="line">├── _config.yml<span class="comment">#主题配置文件</span></span><br><span class="line">└── README.md  <span class="comment">#用GitHub的都知道</span></span><br></pre></td></tr></table></figure>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="发表新文章"><a href="#发表新文章" class="headerlink" title="发表新文章"></a>发表新文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="comment">#写文章</span></span><br></pre></td></tr></table></figure>
<p>其中my new post为文章标题，执行命令后，会在项目\source_posts中生成my new post.md文件，用编辑器打开编写即可。</p>
<p>当然，也可以直接在\source_posts中新建一个md文件，我就是这么做的。</p>
<p>写完后，推送到服务器上，执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment">#生成</span></span><br><span class="line">$ hexo d <span class="comment">#部署 # 可与hexo g合并为 hexo d -g</span></span><br></pre></td></tr></table></figure>
<h2 id="用Hexo发表文章的Markdown语法"><a href="#用Hexo发表文章的Markdown语法" class="headerlink" title="用Hexo发表文章的Markdown语法"></a>用Hexo发表文章的Markdown语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: postName <span class="comment">#文章页面上的显示名称，可以任意修改，不会出现在URL中</span></span><br><span class="line">date: 2013-12-02 15:30:16 <span class="comment">#文章生成时间，一般不改，当然也可以任意修改</span></span><br><span class="line">categories: example <span class="comment">#分类</span></span><br><span class="line">tags: [tag1,tag2,tag3] <span class="comment">#文章标签，可空，多标签请用格式，注意:后面有个空格</span></span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内。</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">以下正文</span><br></pre></td></tr></table></figure>
<h2 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#将.deploy目录部署到GitHub</span></span><br></pre></td></tr></table></figure>
<h2 id="常用复合命令"><a href="#常用复合命令" class="headerlink" title="常用复合命令"></a>常用复合命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g <span class="comment">#生成加部署</span></span><br><span class="line">hexo s -g <span class="comment">#预览加部署</span></span><br></pre></td></tr></table></figure>
<h2 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>
<h1 id="Hexo备份"><a href="#Hexo备份" class="headerlink" title="Hexo备份"></a>Hexo备份</h1><p>已有人写了插件，<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">hexo-git-backup</a>，按步骤操作即可；</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure>
<p>修改站点配置文件 _config.yml.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">backup:</span><br><span class="line">    <span class="built_in">type</span>: git</span><br><span class="line">    repository:</span><br><span class="line">       github: git@github.com:xxx/xxx.git,branchName</span><br><span class="line">       gitcafe: git@github.com:xxx/xxx.git,branchName</span><br></pre></td></tr></table></figure>
<p>使用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo backup</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo b</span><br></pre></td></tr></table></figure>
<h1 id="Hexo部署在VPS"><a href="#Hexo部署在VPS" class="headerlink" title="Hexo部署在VPS"></a>Hexo部署在VPS</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>
<p>根据 <a href="https://hexo.io/zh-cn/docs/deployment.html#Rsync" target="_blank" rel="external">Hexo rsync 部署文档</a> 在 Hexo 中的 _config.yml 中添加 Deploy 的配置，以下是我在自己项目中的配置代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: rsync</span><br><span class="line">  host: 你 VPS 的 IP 地址或者域名</span><br><span class="line">  user: root</span><br><span class="line">  root: 你想将 Hexo 生成的静态文件存放在 VPS 中的目录 例如: /www/hexo/blog/</span><br><span class="line">  port: 你 VPS 的 ssh 端口号</span><br><span class="line">  delete: true</span><br><span class="line">  verbose: true</span><br><span class="line">  ignore_errors: false</span><br></pre></td></tr></table></figure>
<p>*必须先在 VPS 上创建好了想要存放 Hexo 静态文件的目录， rsync 不能创建不存在的目录</p>
<p>我看网上有的朋友说光在 Hexo 中使用 rsync 不够，在 VPS 也需要下载 rsync 服务，但是我在阿里云上就没有下载 rsync 服务。如果你在 Hexo 中用 rsync 部署的时候一直报错，那就在 VPS 上下载 rsync 服务，看能否解决一直出错的原因，命令如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install rsync</span><br></pre></td></tr></table></figure>
<p>如果rsync 报下面的错误</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync error: some files could not be transferred (code 23) at main.c(702)</span><br></pre></td></tr></table></figure>
<p>解决方法: rsync的source有些文件没有读权限，所以报错。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +r  ./* -R</span><br></pre></td></tr></table></figure>
<p>再次同步，即可OK.</p>
<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[npm小结]]></title>
      <url>http://xuzhibin.com/2016/05/29/npm-summary/</url>
      <content type="html"><![CDATA[<p>随着一系列基于nodes的应用/工具的出现，无论在node应用的开发，还是使用中，包管理都扮演着一个很重要的作用。NPM（node package manager），作为node的包管理工具，极大地便利了我们的开发工作，很有必要了解一下。</p>
<h1 id="NPM是什么"><a href="#NPM是什么" class="headerlink" title="NPM是什么"></a>NPM是什么</h1><p>NPM（node package manager），通常称为node包管理器。顾名思义，它的主要功能就是管理node包，包括：安装、卸载、更新、查看、搜索、发布等。<br>npm的背后，是基于couchdb的一个数据库，详细记录了每个包的信息，包括作者、版本、依赖、授权信息等。它的一个很重要的作用就是：将开发者从繁琐的包管理工作（版本、依赖等）中解放出来，更加专注于功能的开发。</p>
<p>npm官网：<a href="https://npmjs.org/" target="_blank" rel="external">https://npmjs.org/</a></p>
<p>npm官方文档：<a href="https://npmjs.org/doc/README.html" target="_blank" rel="external">https://npmjs.org/doc/README.html</a></p>
<h1 id="我们需要了解什么"><a href="#我们需要了解什么" class="headerlink" title="我们需要了解什么"></a>我们需要了解什么</h1><ol>
<li>npm的安装、卸载、升级、配置</li>
<li>npm的使用：package的安装、卸载、升级、查看、搜索、发布</li>
<li>npm包的安装模式：本地 vs 全局</li>
<li>package.json：包描述信息</li>
<li>package版本：常见版本声明形式</li>
</ol>
<h1 id="npm的安装-Mac"><a href="#npm的安装-Mac" class="headerlink" title="npm的安装 Mac"></a>npm的安装 Mac</h1><p>该命令执行后，自动装好node和npm。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<h2 id="npm包安装模式"><a href="#npm包安装模式" class="headerlink" title="npm包安装模式"></a>npm包安装模式</h2><p>在具体介绍npm包的管理之前，我们首先得来了解一下npm包的两种安装模式。</p>
<h2 id="本地安装-vs-全局安装（重要）"><a href="#本地安装-vs-全局安装（重要）" class="headerlink" title="本地安装 vs 全局安装（重要）"></a>本地安装 vs 全局安装（重要）</h2><p>node包的安装分两种：本地安装、全局安装。两者的区别如下，后面会通过简单例子说明<br>本地安装：package会被下载到当前所在目录，也只能在当前目录下使用。<br>全局安装：package会被下载到到特定的系统目录下，安装的package能够在所有目录下使用。</p>
<h2 id="npm-install-pkg-–-本地安装"><a href="#npm-install-pkg-–-本地安装" class="headerlink" title="npm install pkg – 本地安装"></a>npm install pkg – 本地安装</h2><p>运行如下命令，就会在当前目录下安装grunt-cli（grunt命令行工具）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install grunt-cli</span><br></pre></td></tr></table></figure>
<p>安装结束后，当前目录下回多出一个node_modules目录，grunt-cli就安装在里面。同时注意控制台输出的信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grunt-cli@0.1.9 node_modules/grunt-cli</span><br><span class="line">├── resolve@0.3.1</span><br><span class="line">├── nopt@1.0.10 (abbrev@1.0.4)</span><br><span class="line">└── findup-sync@0.1.2 (lodash@1.0.1, glob@3.1.21)</span><br></pre></td></tr></table></figure>
<p>简单说明一下：</p>
<ol>
<li>grunt-cli@0.1.9：当前安装的package为grunt-cli，版本为0.19</li>
<li>node_modules/grunt-cli：安装目录</li>
<li>resolve@0.3.1：依赖的包有resolve、nopt、findup-sync，它们各自的版本、依赖在后面的括号里列出来</li>
</ol>
<h2 id="npm-install-g-pkg-全局安装"><a href="#npm-install-g-pkg-全局安装" class="headerlink" title="npm install -g pkg- 全局安装"></a>npm install -g pkg- 全局安装</h2><p>上面已经安装了grunt-cli，然后你跑到其他目录下面运行如下命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grunt</span><br></pre></td></tr></table></figure>
<p>果断提示你grunt命令不存在，为什么呢？因为上面只是进行了本地安装，grunt命令只能在对应安装目录下使用。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-bash: grunt: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>
<p>如果为了使用grunt命令，每到一个目录下都得重新安装一次，那不抓狂才怪。肿么办呢？<br>很简单，采用全局安装就行了，很简单，加上参数-g就可以了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g grunt-cli</span><br></pre></td></tr></table></figure>
<p>于是，在所有目录下都可以无压力使用grunt命令了。这个时候，你会注意到控制台输入的信息有点不同。主要的区别在于安装目录，现在变成了/usr/local/lib/node_modules/grunt-cli，/usr/local/lib/node_modules/也就是之前所说的全局安装目录啦。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grunt-cli@0.1.9 /usr/<span class="built_in">local</span>/lib/node_modules/grunt-cli</span><br><span class="line">├── resolve@0.3.1</span><br><span class="line">├── nopt@1.0.10 (abbrev@1.0.4)</span><br><span class="line">└── findup-sync@0.1.2 (lodash@1.0.1, glob@3.1.21)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="npm包管理"><a href="#npm包管理" class="headerlink" title="npm包管理"></a>npm包管理</h1><p>npm的包管理命令是使用频率最高的，所以也是我们需要牢牢记住并熟练使用的。其实无非也就是几个动作：安装、卸载、更新、查看、搜索、发布等。</p>
<p><strong>安装最新版本的grunt-cli</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install grunt-cli</span><br></pre></td></tr></table></figure>
<p><strong>安装0.1.9版本的grunt-cli</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install grunt-cli@<span class="string">"0.1.9"</span></span><br></pre></td></tr></table></figure>
<p><strong>通过package.json进行安装</strong></p>
<p>如果我们的项目依赖了很多package，一个一个地安装那将是个体力活。我们可以将项目依赖的包都在package.json这个文件里声明，然后一行命令搞定</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nam install</span><br></pre></td></tr></table></figure>
<p><strong>其他package安装命令</strong><br>运行如下命令，列出所有npm install可能的参数形式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --help</span><br></pre></td></tr></table></figure>
<p>输出如下，有兴趣的童鞋可以了解下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;tarball file&gt;</span><br><span class="line">npm install &lt;tarball url&gt;</span><br><span class="line">npm install &lt;folder&gt;</span><br><span class="line">npm install &lt;pkg&gt;</span><br><span class="line">npm install &lt;pkg&gt;@&lt;tag&gt;</span><br><span class="line">npm install &lt;pkg&gt;@&lt;version&gt;</span><br><span class="line">npm install &lt;pkg&gt;@&lt;version range&gt;</span><br></pre></td></tr></table></figure>
<p><strong>卸载grunt-cli</strong><br>比如卸载grunt-cli</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall grunt-cli</span><br></pre></td></tr></table></figure>
<p>卸载0.1.9版本的grunt-cli</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall grunt-cli@<span class="string">"0.1.9"</span></span><br></pre></td></tr></table></figure>
<p><strong>npm ls：查看安装了哪些包</strong></p>
<p>运行如下命令，就可以查看当前目录安装了哪些package</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ls</span><br></pre></td></tr></table></figure>
<p>输出如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/private/tmp/npm</span><br><span class="line">└─┬ grunt-cli@0.1.9</span><br><span class="line">  ├─┬ findup-sync@0.1.2</span><br><span class="line">  │ ├─┬ glob@3.1.21</span><br><span class="line">  │ │ ├── graceful-fs@1.2.3</span><br><span class="line">  │ │ ├── inherits@1.0.0</span><br><span class="line">  │ │ └─┬ minimatch@0.2.12</span><br><span class="line">  │ │   ├── lru-cache@2.3.0</span><br><span class="line">  │ │   └── sigmund@1.0.0</span><br><span class="line">  │ └── lodash@1.0.1</span><br><span class="line">  ├─┬ nopt@1.0.10</span><br><span class="line">  │ └── abbrev@1.0.4</span><br><span class="line">  └── resolve@0.3.1</span><br></pre></td></tr></table></figure>
<p>输出如下，同样，如果是要查看package的全局安装信息，加上-g就可以</p>
<p><strong>npm ls pkg：查看特定package的信息</strong><br>运行如下命令，输出grunt-cli的信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ls grunt-cli</span><br></pre></td></tr></table></figure>
<p>输出的信息比较有限，只有安装目录、版本，如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/private/tmp/npm</span><br><span class="line">└── grunt-cli@0.1.9</span><br></pre></td></tr></table></figure>
<p>如果要查看更详细信息，可以通过npm info pkg，输出的信息非常详尽，包括作者、版本、依赖等。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm info grunt-cli</span><br></pre></td></tr></table></figure>
<p><strong>npm update pkg：package更新</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update grunt-cli</span><br></pre></td></tr></table></figure>
<p><strong>npm search pgk：搜索</strong><br>输入如下命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm search grunt-cli</span><br></pre></td></tr></table></figure>
<p>返回结果如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm http GET http://registry.npmjs.org/-/all/since?stale=update_after&amp;startkey=1375519407838</span><br><span class="line">npm http 200 http://registry.npmjs.org/-/all/since?stale=update_after&amp;startkey=1375519407838</span><br><span class="line">NAME                  DESCRIPTION                                        AUTHOR            DATE              KEYWORDS</span><br><span class="line">grunt-cli             The grunt <span class="built_in">command</span> line interface.                  =cowboy =tkellen  2013-07-27 02:24</span><br><span class="line">grunt-cli-dev-exitprocess The grunt <span class="built_in">command</span> line interface.              =dnevnik          2013-03-11 16:19</span><br><span class="line">grunt-client-compiler Grunt wrapper <span class="keyword">for</span> client-compiler.                 =rubenv           2013-03-26 09:15  gruntplugin</span><br><span class="line">grunt-clientside      Generate clientside js code from CommonJS modules  =jga              2012-11-07 01:20  gruntplugin</span><br></pre></td></tr></table></figure>
<h1 id="npm发布"><a href="#npm发布" class="headerlink" title="npm发布"></a>npm发布</h1><p>这个命令我自己也还没实际用过，不误导大家，语法如下，也可参考官方对于package发布的说明 <a href="https://npmjs.org/doc/developers.html：" target="_blank" rel="external">https://npmjs.org/doc/developers.html：</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm publish &lt;tarball&gt;</span><br><span class="line">npm publish &lt;folder&gt;</span><br></pre></td></tr></table></figure>
<h1 id="NPM配置"><a href="#NPM配置" class="headerlink" title="NPM配置"></a>NPM配置</h1><p>npm的配置工作主要是通过npm config命令，主要包含增、删、改、查几个步骤，下面就以最为常用的proxy配置为例。</p>
<h2 id="设置proxy"><a href="#设置proxy" class="headerlink" title="设置proxy"></a>设置proxy</h2><p>内网使用npm很头痛的一个问题就是代理，假设我们的代理是 <a href="http://proxy.example.com:8080，那么命令如下：" target="_blank" rel="external">http://proxy.example.com:8080，那么命令如下：</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> proxy http://proxy.example.com:8080</span><br></pre></td></tr></table></figure>
<p>由于npm config set命令比较常用，于是可以如下简写</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">set</span> proxy http://proxy.example.com:8080</span><br></pre></td></tr></table></figure>
<h2 id="查看proxy"><a href="#查看proxy" class="headerlink" title="查看proxy"></a>查看proxy</h2><p>设置完，我们查看下当前代理设置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get proxy</span><br></pre></td></tr></table></figure>
<p>输出如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://proxy.example.com:8080/</span><br></pre></td></tr></table></figure>
<p>同样可如下简写：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm get proxy</span><br></pre></td></tr></table></figure>
<h2 id="删除proxy"><a href="#删除proxy" class="headerlink" title="删除proxy"></a>删除proxy</h2><p>代理不需要用到了，那删了吧</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm delete proxy</span><br></pre></td></tr></table></figure>
<h2 id="查看所有配置"><a href="#查看所有配置" class="headerlink" title="查看所有配置"></a>查看所有配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config list</span><br></pre></td></tr></table></figure>
<h2 id="直接修改配置文件"><a href="#直接修改配置文件" class="headerlink" title="直接修改配置文件"></a>直接修改配置文件</h2><p>有时候觉得一条配置一条配置地修改有些麻烦，就直接进配置文件修改了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config edit</span><br></pre></td></tr></table></figure>
<h1 id="关于package-json"><a href="#关于package-json" class="headerlink" title="关于package.json"></a>关于package.json</h1><p>这货在官网似乎没有详细的描述，其实就是包的描述信息啦。假设当我们下载了node应用，这个node应用依赖于A、B、C三个包，如果没有package.json，我们需要人肉安装这个三个包（如果对版本有特定要求就更悲剧了）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install A</span><br><span class="line">npm install B</span><br><span class="line">npm install C</span><br></pre></td></tr></table></figure>
<p>有了package.json，一行命令安装所有依赖。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h2 id="package-json的生成"><a href="#package-json的生成" class="headerlink" title="package.json的生成"></a>package.json的生成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure>
<h2 id="package-json字段简介"><a href="#package-json字段简介" class="headerlink" title="package.json字段简介"></a>package.json字段简介</h2><p>字段相当多，但最重要的的是下面几个</p>
<blockquote>
<p>name: package的名字（由于他会成为url的一部分，所以 non-url-safe 的字母不会通过，也不允许出现”.”、”_”），最好先在<a href="http://registry.npmjs.org/上搜下你取的名字是否已经存在" target="_blank" rel="external">http://registry.npmjs.org/上搜下你取的名字是否已经存在</a></p>
<p>version: package的版本，当package发生变化时，version也应该跟着一起变化，同时，你声明的版本需要通过semver的校验（semver可自行谷歌）<br>dependencies: package的应用依赖模块，即别人要使用这个package，至少需要安装哪些东东。应用依赖模块会安装到当前模块的node_modules目录下。</p>
<p>devDependencies：package的开发依赖模块，即别人要在这个package上进行开发</p>
<p>其他：参见官网</p>
</blockquote>
<h2 id="package版本"><a href="#package版本" class="headerlink" title="package版本"></a>package版本</h2><p>在package.json里，你经常会在包名后看到类似”~0.1.0″这样的字符串，这就是包的版本啦。下面会列举最常见的版本声明形式，以及版本书写的要求：<br>常见版本声明形式<br>a、”~1.2.3″ 是神马意思呢，看下面领悟</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;~1.2.3&quot; = &quot;&gt;=1.2.3 &amp;lt;1.3.0&quot;</span><br><span class="line">&quot;~1.2&quot; = &quot;&gt;=1.2.0 &amp;lt;1.3.0&quot;</span><br><span class="line">&quot;~1&quot; = &quot;&gt;=1.0.0 &amp;lt;1.1.0&quot;</span><br></pre></td></tr></table></figure>
<p>b、”1.x.x”是什么意思呢，继续自行领悟</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;1.2.x&quot; = &quot;&gt;=1.2.0 &amp;lt;1.3.0&quot;</span><br><span class="line">&quot;1.x.x&quot; = &quot;&gt;=1.0.0 &amp;lt;2.0.0&quot;</span><br><span class="line">&quot;1.2&quot; = &quot;1.2.x&quot;</span><br><span class="line">&quot;1.x&quot; = &quot;1.x.x&quot;</span><br><span class="line">&quot;1&quot; = &quot;1.x.x&quot;</span><br></pre></td></tr></table></figure>
<p>版本书写要求</p>
<ol>
<li>版本可以v开头，比如 v1.0.1（v只是可选）</li>
<li>1.0.1-7，这里的7是所谓的“构建版本号”，不理是神马，反正版本大于1.0.1</li>
<li>1.0.1beta，或者1.0.1-beta，如果1.0.1后面不是 “连字符加数字” 这种形式，那么它是pre release 版本，即版本小于 1.0.1</li>
<li>根据b、c，有：0.1.2-7 &gt; 0.1.2-7-beta &gt; 0.1.2-6 &gt; 0.1.2 &gt; 0.1.2beta</li>
</ol>
<h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>内容只是简单地把最常见的命令，以及一些需要了解的内容列了出来。如要进一步了解，可参考官网说明。此外，npm help是我们最好的朋友，如果忘了有哪些命令，命令下有哪些参数，可通过help进行查看。</p>
]]></content>
    </entry>
    
  
  
</search>
